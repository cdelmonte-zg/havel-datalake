version: '2.2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    restart: always
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - '5601:5601'
    networks:
      - esnet

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes: 
      - redis:/data

  neo4j:
    image: neo4j:5
    hostname: neo4j
    restart: always
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4JLABS_PLUGINS: '["graph-data-science", "apoc"]'
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - 'neo4j_data:/data'

  postgres-havel:
    build: ./sample-dbs/AdventureWorks-for-Postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '25432:5432'
    volumes:
      - postgres_data:/data

  mongodb:
    image: mongo
    restart: always
    logging:
      options:
        max-size: 1g
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=bdung
  
    volumes:
      - mongodb:/data/db
      - mongodb_config:/data/configdb
    ports:
        - 27017:27017
    command: mongod

  zoo1:
    image: confluentinc/cp-zookeeper
    hostname: zoo1
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
        - zookeeper_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zoo1
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
        - zookeeper_network

  nifi-registry:
      hostname: myregistry
      image: apache/nifi-registry
      restart: always
      ports:
        - "18080:18080"
      environment:
        - LOG_LEVEL=INFO
        - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
        - NIFI_REGISTRY_FLOW_PROVIDER=file
        - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
      volumes:
        - ./nifi/nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
        - ./nifi/nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
      networks:
         - zookeeper_network
      depends_on:
        - zoo1

  nifi:
      hostname: mynifi
      image: apache/nifi
      restart: always
      ports:
        - '8091:8080'
      environment:
        - NIFI_WEB_HTTP_PORT=8080
        - NIFI_CLUSTER_IS_NODE=true
        - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
        - NIFI_ZK_CONNECT_STRING=zoo1:2181
        - NIFI_ELECTION_MAX_WAIT=30 sec
        - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
      healthcheck:
        test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8091/nifi/}"
        interval: "60s"
        timeout: "3s"
        start_period: "5s"
        retries: 5
      volumes:
        - ./nifi/database_repository:/opt/nifi/nifi-current/database_repository
        - ./nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
        - ./nifi/content_repository:/opt/nifi/nifi-current/content_repository
        - ./nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
        - ./nifi/state:/opt/nifi/nifi-current/state
        - ./nifi/logs:/opt/nifi/nifi-current/logs
        - ./nifi/conf-data:/conf-data
        - ./nifi/conf:/opt/nifi/nifi-current/conf
      networks:
        - zookeeper_network
      depends_on:
        - zoo1

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  redis:
    driver: local 
  neo4j_data:
    driver: local
  postgres_data:
    driver: local
  mongodb:
    driver: local
  mongodb_config:
    driver: local

networks:
  esnet:
  zookeeper_network:
    driver: bridge
